#pragma kernel Density
#include "/Includes/HLSL_Noise/ClassicNoise3D.hlsl"

static const int numThreads = 8;


RWStructuredBuffer<float4> voxels; //buffer of voxels (a coordinate + float value)

int resolution;
float vS;
float tfx;
float tfy;
float tfz;

int indexFromCoord(int x, int y, int z) {
    return z * resolution * resolution + y * resolution + x;
}

[numthreads(numThreads, numThreads, numThreads)]
void Density(int3 id : SV_DispatchThreadID)
{
	float3 tfL = { tfx, tfy, tfz };
	float density = -id.y;
	density += cnoise(id.xyz + tfL);
	
	int i = indexFromCoord(id.x, id.y, id.z);
	voxels[i].x = id.x;
	voxels[i].y = id.y;
	voxels[i].z = id.z;
	voxels[i].w = density;
}