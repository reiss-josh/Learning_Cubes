static const int hash[512] = {
		151,160,137, 91, 90, 15,131, 13,201, 95, 96, 53,194,233,  7,225,
		140, 36,103, 30, 69,142,  8, 99, 37,240, 21, 10, 23,190,  6,148,
		247,120,234, 75,  0, 26,197, 62, 94,252,219,203,117, 35, 11, 32,
		57,177, 33, 88,237,149, 56, 87,174, 20,125,136,171,168, 68,175,
		74,165, 71,134,139, 48, 27,166, 77,146,158,231, 83,111,229,122,
		60,211,133,230,220,105, 92, 41, 55, 46,245, 40,244,102,143, 54,
		65, 25, 63,161,  1,216, 80, 73,209, 76,132,187,208, 89, 18,169,
		200,196,135,130,116,188,159, 86,164,100,109,198,173,186,  3, 64,
		52,217,226,250,124,123,  5,202, 38,147,118,126,255, 82, 85,212,
		207,206, 59,227, 47, 16, 58, 17,182,189, 28, 42,223,183,170,213,
		119,248,152,  2, 44,154,163, 70,221,153,101,155,167, 43,172,  9,
		129, 22, 39,253, 19, 98,108,110, 79,113,224,232,178,185,112,104,
		218,246, 97,228,251, 34,242,193,238,210,144, 12,191,179,162,241,
		81, 51,145,235,249, 14,239,107, 49,192,214, 31,181,199,106,157,
		184, 84,204,176,115,121, 50, 45,127,  4,150,254,138,236,205, 93,
		222,114, 67, 29, 24, 72,243,141,128,195, 78, 66,215, 61,156,180,

		151,160,137, 91, 90, 15,131, 13,201, 95, 96, 53,194,233,  7,225,
		140, 36,103, 30, 69,142,  8, 99, 37,240, 21, 10, 23,190,  6,148,
		247,120,234, 75,  0, 26,197, 62, 94,252,219,203,117, 35, 11, 32,
		57,177, 33, 88,237,149, 56, 87,174, 20,125,136,171,168, 68,175,
		74,165, 71,134,139, 48, 27,166, 77,146,158,231, 83,111,229,122,
		60,211,133,230,220,105, 92, 41, 55, 46,245, 40,244,102,143, 54,
		65, 25, 63,161,  1,216, 80, 73,209, 76,132,187,208, 89, 18,169,
		200,196,135,130,116,188,159, 86,164,100,109,198,173,186,  3, 64,
		52,217,226,250,124,123,  5,202, 38,147,118,126,255, 82, 85,212,
		207,206, 59,227, 47, 16, 58, 17,182,189, 28, 42,223,183,170,213,
		119,248,152,  2, 44,154,163, 70,221,153,101,155,167, 43,172,  9,
		129, 22, 39,253, 19, 98,108,110, 79,113,224,232,178,185,112,104,
		218,246, 97,228,251, 34,242,193,238,210,144, 12,191,179,162,241,
		81, 51,145,235,249, 14,239,107, 49,192,214, 31,181,199,106,157,
		184, 84,204,176,115,121, 50, 45,127,  4,150,254,138,236,205, 93,
		222,114, 67, 29, 24, 72,243,141,128,195, 78, 66,215, 61,156,180
};

static const float3 gradients3D[16] = {
		{1.0f, 1.0f, 0.0f},
		{-1.0f, 1.0f, 0.0f},
		{1.0f,-1.0f, 0.0f},
		{-1.0f,-1.0f, 0.0f},
		{1.0f, 0.0f, 1.0f},
		{-1.0f, 0.0f, 1.0f},
		{1.0f, 0.0f,-1.0f},
		{-1.0f, 0.0f,-1.0f},
		{0.0f, 1.0f, 1.0f},
		{0.0f,-1.0f, 1.0f},
		{0.0f, 1.0f,-1.0f},
		{0.0f,-1.0f,-1.0f},

		{1.0f, 1.0f, 0.0f},
		{-1.0f, 1.0f, 0.0f},
		{0.0f,-1.0f, 1.0f},
		{0.0f,-1.0f,-1.0f}
};

int hashMask = 255;
const int gradientsMask3D = 15;
float freq = 3.0f;

float Dot(float3 g, float x, float y, float z) {
	return g.x * x + g.y * y + g.z * z;
}

float Smooth(float t) {
	return t * t * t * (t * (t * 6.0f - 15.0f) + 10.0f);
}

float3 Perlin3D(float3 pnt, float frequency) {
	pnt *= frequency;
	int ix0 = floor(pnt.x);
	int iy0 = floor(pnt.y);
	int iz0 = floor(pnt.z);
	float tx0 = pnt.x - ix0;
	float ty0 = pnt.y - iy0;
	float tz0 = pnt.z - iz0;
	float tx1 = tx0 - 1.0f;
	float ty1 = ty0 - 1.0f;
	float tz1 = tz0 - 1.0f;
	ix0 &= hashMask;
	iy0 &= hashMask;
	iz0 &= hashMask;
	int ix1 = ix0 + 1;
	int iy1 = iy0 + 1;
	int iz1 = iz0 + 1;

	int h0 = hash[ix0];
	int h1 = hash[ix1];
	int h00 = hash[h0 + iy0];
	int h10 = hash[h1 + iy0];
	int h01 = hash[h0 + iy1];
	int h11 = hash[h1 + iy1];
	float3 g000 = gradients3D[hash[h00 + iz0] & gradientsMask3D];
	float3 g100 = gradients3D[hash[h10 + iz0] & gradientsMask3D];
	float3 g010 = gradients3D[hash[h01 + iz0] & gradientsMask3D];
	float3 g110 = gradients3D[hash[h11 + iz0] & gradientsMask3D];
	float3 g001 = gradients3D[hash[h00 + iz1] & gradientsMask3D];
	float3 g101 = gradients3D[hash[h10 + iz1] & gradientsMask3D];
	float3 g011 = gradients3D[hash[h01 + iz1] & gradientsMask3D];
	float3 g111 = gradients3D[hash[h11 + iz1] & gradientsMask3D];

	float v000 = Dot(g000, tx0, ty0, tz0);
	float v100 = Dot(g100, tx1, ty0, tz0);
	float v010 = Dot(g010, tx0, ty1, tz0);
	float v110 = Dot(g110, tx1, ty1, tz0);
	float v001 = Dot(g001, tx0, ty0, tz1);
	float v101 = Dot(g101, tx1, ty0, tz1);
	float v011 = Dot(g011, tx0, ty1, tz1);
	float v111 = Dot(g111, tx1, ty1, tz1);

	float tx = Smooth(tx0);
	float ty = Smooth(ty0);
	float tz = Smooth(tz0);
	return lerp(
		lerp(lerp(v000, v100, tx), lerp(v010, v110, tx), ty),
		lerp(lerp(v001, v101, tx), lerp(v011, v111, tx), ty),
		tz);
}

float Sample(float3 ws)
{
    float density = -ws.y;
    density += Perlin3D(ws.xyz, freq);
    density += Perlin3D(ws.xyz * 2, freq) * 0.5f;
    return density;
}